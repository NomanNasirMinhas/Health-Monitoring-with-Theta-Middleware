"use strict";
exports.__esModule = true;
var ava_1 = require("ava");
var src_1 = require("../src");
ava_1["default"]('isAddress()', function (t) {
    var validAddressWithChecksum = 'UYEEERFQYTPFAHIPXDQAQYWYMSMCLMGBTYAXLWFRFFWPYFOICOVLK9A9VYNCKK9TQUNBTARCEQXJHD9VYXOEDEOMRC';
    var validAddressWithoutChecksum = 'JALLWDUOSTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLS';
    var validAddressWithInvalidChecksum = 'JALLWDUOSTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLSJMPIVGPNF';
    var addressOfInvalidLength = 'JALLWDUOSTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNR';
    var addressOfInvalidTrytes = '123adfdsafLWDUOSTSJVL9EEHKW9YQFPBVBJAGLNKRVGSQZCGHQWEMIIILJMTHVAGVDXJVZMBAMOZTSBQNRVNLLASD';
    t.is(src_1.isAddress(validAddressWithChecksum), true, 'isAddress() should return true for valid address with valid checksum.');
    t.is(src_1.isAddress(validAddressWithoutChecksum), false, 'isAddress() should return false for valid address without checksum.');
    t.is(src_1.isAddress(validAddressWithInvalidChecksum), false, 'isAddress() should return false for valid address with invalid checksum.');
    t.is(src_1.isAddress(addressOfInvalidLength), false, 'isAddress() should return false for input of invalid length.');
    t.is(src_1.isAddress(addressOfInvalidTrytes), false, 'isAddress() should return false for input of invalid trytes.');
});
//# sourceMappingURL=isAddress.test.js.map