{"version":3,"sources":["serviceWorker.js","assets/theme/theme.js","views/Login/Login.js","views/CreateAccount/CreateAccount.js","views/ForgotPassword/ForgotPassword.js","components/Header/Header.js","views/HomePage/HomePage.js","views/ViewHistory/ViewHistory.js","views/ViewPatientProfile/ViewPatientProfile.js","assets/jss/material-dashboard-react.js","assets/jss/material-dashboard-react/components/cardStyle.js","components/Card/Card.js","assets/jss/material-dashboard-react/components/cardAvatarStyle.js","components/Card/CardAvatar.js","assets/jss/material-dashboard-react/components/cardHeaderStyle.js","components/Card/CardHeader.js","assets/jss/material-dashboard-react/components/cardBodyStyle.js","components/Card/CardBody.js","views/YourProfile/YourProfile.js","views/LiveReadings/LiveReadings.js","views/AddPatient/AddPatient.js","index.js"],"names":["Boolean","window","location","hostname","match","theme","createMuiTheme","palette","primary","main","secondary","useStyles","makeStyles","root","display","paper","marginTop","spacing","flexDirection","alignItems","toolBar","minHeight","appBar","submit","margin","height","Login","props","React","useState","setLoggedInStatus","classes","className","content","ThemeProvider","AppBar","position","Toolbar","Slide","direction","in","timeout","Typography","variant","title","form","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","type","Button","color","style","fontSize","onClick","history","push","Grid","container","item","xs","Link","component","link","to","width","background","marginTopAppBar","appBarSpacer","mixins","toolbar","zIndex","drawer","flexShrink","drawerPaper","drawerContainer","overflow","flexGrow","padding","SvgIcon","marginBottom","marginRight","buttons","withRouter","dialogOpen","setDialogOpen","anchorEl","setAnchorEl","open","dialogClose","CssBaseline","noWrap","date","Date","hours","getHours","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","Divider","Dialog","maxWidth","DialogTitle","DialogContent","DialogContentText","DialogActions","StyledTableCell","withStyles","head","backgroundColor","common","white","body","TableCell","StyledTableRow","TableRow","createData","age","rows","table","minWidth","titletext","time","hr","temp","sys","diast","labels","sideButton","boxShadow","borderRadius","tileTopText","marginLeft","fontWeight","lineHeight","tileBottomText","textAlign","rightBar","justifyContent","cardBody","gridTemplateRows","gridTemplateColumns","flexWrap","border","minicard","ViewPatientProfile","openGenerateReport","setOpenGenerateReport","openDischarge","setOpenDischarge","lg","headerText","join","Card","startIcon","hexToRgb","input","replace","test","length","Error","first","second","last","toUpperCase","parseInt","primaryColor","warningColor","dangerColor","successColor","infoColor","roseColor","grayColor","primaryBoxShadow","infoBoxShadow","successBoxShadow","warningBoxShadow","dangerBoxShadow","roseBoxShadow","warningCardHeader","successCardHeader","dangerCardHeader","infoCardHeader","primaryCardHeader","roseCardHeader","paddingTop","borderTop","fontFamily","textDecoration","cardStyle","card","wordWrap","cardPlain","cardProfile","cardChart","styles","children","plain","profile","chart","rest","cardClasses","classNames","undefined","cardAvatarStyle","cardAvatar","cardAvatarProfile","maxHeight","cardAvatarPlain","CardAvatar","cardAvatarClasses","cardHeaderStyle","cardHeader","borderBottom","cardHeaderPlain","cardHeaderStats","cardHeaderIcon","CardHeader","stats","icon","cardHeaderClasses","cardBodyStyle","flex","WebkitBoxFlex","cardBodyPlain","paddingLeft","paddingRight","cardBodyProfile","CardBody","cardBodyClasses","YourProfile","align","src","alt","LiveReadings","biPolarBarChartData","series","biPolarBarChartOptions","high","low","axisX","labelInterpolationFnc","value","index","data","options","avatar","SecuredRoute","path","render","loggedInStatus","pathname","ReactDOM","exact","setOpen","handleClose","Container","console","log","sm","justify","TableContainer","Paper","Table","TableHead","TableBody","map","row","key","scope","setAge","FormControl","InputLabel","Select","labelId","onChange","target","defaultValue","textField","InputLabelProps","shrink","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.36388a06.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles'\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#00a152'\r\n        },\r\n        secondary: {\r\n            main: '#959595'\r\n        }\r\n    },\r\n})\r\nexport default theme","import React from \"react\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { makeStyles, Grid, Button, AppBar, Toolbar, TextField, Link, ThemeProvider, Slide } from '@material-ui/core'\r\nimport theme from \"../../assets/theme/theme\"\r\nimport { Link as link } from \"react-router-dom\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(35),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    toolBar: {\r\n        minHeight: \"180px\",\r\n    },\r\n    appBar: {\r\n        alignItems: \"center\"\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(6, 0, 2),\r\n        height: \"70px\"\r\n    },\r\n}));\r\nconst Login = (props) => {\r\n    // const authentication = {\r\n    //     isLoggedIn: false,\r\n    //     onAuthentication() {\r\n    //         this.isLoggedIn = true\r\n    //     },\r\n    //     getLoggedInStatus() {\r\n    //         return this.isLoggedIn\r\n    //     }\r\n    // }\r\n    const handleClick = () => {\r\n        setLoggedInStatus(true)\r\n        props.history.push('/dashboard')\r\n        // alert(loggedInStatus)\r\n    }\r\n    const [loggedInStatus, setLoggedInStatus] = React.useState(false);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.content}>\r\n            <ThemeProvider theme={theme}>\r\n                <AppBar position=\"fixed\" className={classes.appBar}>\r\n                    <Toolbar className={classes.toolBar}>\r\n                        <Slide direction=\"down\" in={true} timeout={300}>\r\n                            <Typography variant=\"h3\" className={classes.title}>\r\n                                LOGIN TO PORTAL\r\n                            </Typography>\r\n                        </Slide>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Slide direction=\"down\" in={true} timeout={300}>\r\n                <main>\r\n                    <div className={classes.paper}>\r\n                        <form className={classes.form} noValidate>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                label=\"Username\"\r\n                                name=\"username\"\r\n                                autoComplete=\"off\"\r\n                            />\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                            />\r\n\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                style={{ fontSize: 20 }}\r\n                                className={classes.submit}\r\n                                onClick={handleClick}\r\n                            >\r\n                                Log In\r\n                         </Button>\r\n\r\n                            <Grid container>\r\n                                <Grid item xs>\r\n                                    <Link\r\n                                        component={link}\r\n                                        to=\"/forgotpassword\"\r\n                                        variant=\"body2\">\r\n                                        Forgot password?\r\n                                </Link>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Link\r\n                                        component={link}\r\n                                        to=\"/createaccount\"\r\n                                        variant=\"body2\">\r\n                                        {\"Create New Account\"}\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                </main>\r\n                </Slide>\r\n            </ThemeProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react';\r\nimport { Button, TextField, Link, Dialog, DialogContent, DialogContentText, DialogTitle, ThemeProvider } from '@material-ui/core';\r\nimport { Grid, Typography, makeStyles, Container, DialogActions, Slide } from '@material-ui/core';\r\nimport { AppBar, Toolbar } from \"@material-ui/core\"\r\nimport theme from \"../../assets/theme/theme\"\r\nimport { Link as link } from \"react-router-dom\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    toolBar: {\r\n        minHeight: \"180px\",\r\n    },\r\n    appBar: {\r\n        alignItems: \"center\",\r\n        background: '#00a152'\r\n    },\r\n    marginTopAppBar: {\r\n        marginTop: theme.spacing(24)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(6, 0, 2),\r\n        height: \"70px\"\r\n    }\r\n}));\r\n\r\nexport default function SignUp() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleSubmit = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar className={classes.toolBar}>\r\n                    <Slide direction=\"down\" in={true} timeout={300}>\r\n                        <Typography variant=\"h3\" className={classes.title}>\r\n                            SIGN UP\r\n                        </Typography>\r\n                    </Slide>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className={classes.marginTopAppBar} />\r\n            <Slide direction=\"down\" in={true} timeout={300}>\r\n                <Container component=\"main\" maxWidth=\"sm\">\r\n                    <div className={classes.paper}>\r\n                        <form className={classes.form} noValidate>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        autoComplete=\"fname\"\r\n                                        name=\"firstName\"\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"firstName\"\r\n                                        label=\"First Name\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"lastName\"\r\n                                        label=\"Last Name\"\r\n                                        name=\"lastName\"\r\n                                        autoComplete=\"lname\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"specialization\"\r\n                                        label=\"Specialization\"\r\n                                        name=\"specialization\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"email\"\r\n                                        label=\"Email Address\"\r\n                                        name=\"email\"\r\n                                        autoComplete=\"email\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        type=\"number\"\r\n                                        id=\"number\"\r\n                                        label=\"Contact Number\"\r\n                                        name=\"number\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        name=\"password\"\r\n                                        label=\"Password\"\r\n                                        type=\"password\"\r\n                                        id=\"password\"\r\n                                        autoComplete=\"current-password\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"address\"\r\n                                        label=\"Address\"\r\n                                        name=\"address\"\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Button\r\n                                onClick={handleSubmit}\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                style={{ background: '#00a152', color: '#FFFFFF', fontSize: 20 }}\r\n                                className={classes.submit}\r\n                            >\r\n                                Sign Up\r\n                        </Button>\r\n                            <Dialog\r\n                                maxWidth=\"md\"\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                            >\r\n                                <DialogTitle>Account Created Successfully</DialogTitle>\r\n                                <DialogContent>\r\n                                    <DialogContentText>\r\n                                        Kindly keep the Seed ID safe. Your Seed ID is: 1213213312114214123. Your QR is:\r\n                                </DialogContentText>\r\n                                    <img\r\n                                        src=\"https://s3.eu-central-1.amazonaws.com/centaur-wp/econsultancy/prod/content/uploads/archive/images/resized/0002/4236/qr_code-blog-third.png\"\r\n                                        alt=\"QR Code\" />\r\n                                    <DialogActions>\r\n                                        <Button onClick={handleClose} color=\"primary\">\r\n                                            Save QR\r\n                                    </Button>\r\n                                        <Button onClick={handleClose} color=\"primary\">\r\n                                            Close\r\n                                    </Button>\r\n                                    </DialogActions>\r\n                                </DialogContent>\r\n                            </Dialog>\r\n                            <Grid container justify=\"flex-end\">\r\n                                <Grid item>\r\n                                    <Link\r\n                                        to=\"/\"\r\n                                        component={link}\r\n                                        variant=\"body2\">\r\n                                        Already have an account? Sign in\r\n                                </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                </Container>\r\n            </Slide>\r\n        </ThemeProvider>\r\n    );\r\n}","import React from 'react';\r\nimport { Button, TextField, Dialog, DialogContent, DialogContentText, DialogTitle, DialogActions } from '@material-ui/core';\r\nimport { Grid, Typography, makeStyles, Container, ThemeProvider, Slide } from '@material-ui/core';\r\nimport { AppBar, Toolbar } from \"@material-ui/core\"\r\nimport theme from \"../../assets/theme/theme\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    toolBar: {\r\n        minHeight: \"180px\",\r\n    },\r\n    appBar: {\r\n        alignItems: \"center\",\r\n    },\r\n    marginTopAppBar: {\r\n        marginTop: theme.spacing(35)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(6, 0, 2),\r\n        height: \"70px\"\r\n    }\r\n}));\r\n\r\nexport default function ForgotPassword() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleSubmit = () => {\r\n        setOpen(true)\r\n        console.log(\"Done\")\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar className={classes.toolBar}>\r\n                    <Slide direction=\"down\" in={true} timeout={300}>\r\n                        <Typography variant=\"h3\" className={classes.title}>\r\n                            FORGOT PASSWORD\r\n                         </Typography>\r\n                    </Slide>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className={classes.marginTopAppBar} />\r\n            <Slide direction=\"down\" in={true} timeout={300}>\r\n                <Container component=\"main\" maxWidth=\"sm\">\r\n                    <div className={classes.paper}>\r\n                        <form className={classes.form} noValidate>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        autoComplete=\"fname\"\r\n                                        name=\"enterSeed\"\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"enterSeed\"\r\n                                        label=\"Enter Seed\"\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Button\r\n                                onClick={handleSubmit}\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                style={{ fontSize: 20 }}\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                            >\r\n                                Get Password\r\n                        </Button>\r\n                            <Dialog\r\n                                fullWidth\r\n                                maxWidth=\"sm\"\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                            >\r\n                                <DialogTitle>Password Received</DialogTitle>\r\n                                <DialogContent>\r\n                                    <DialogContentText>\r\n                                        Your Password is: abc123\r\n                                </DialogContentText>\r\n                                    <DialogActions>\r\n                                        <Button onClick={handleClose} color=\"primary\">\r\n                                            Close\r\n                                    </Button>\r\n                                    </DialogActions>\r\n                                </DialogContent>\r\n                            </Dialog>\r\n                        </form>\r\n                    </div>\r\n                </Container>\r\n            </Slide>\r\n        </ThemeProvider>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, CssBaseline, Toolbar, IconButton, Menu, Typography, DialogContent, DialogContentText, ThemeProvider } from '@material-ui/core';\r\nimport { Divider, Button, MenuItem, SvgIcon, Dialog, DialogTitle, DialogActions, TextField } from \"@material-ui/core\"\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\"\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport theme from \"../../assets/theme/theme\"\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n\r\n  drawerContainer: {\r\n    overflow: 'auto',\r\n  },\r\n\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n\r\n  SvgIcon: {\r\n    marginBottom: 2,\r\n    marginRight: theme.spacing(2),\r\n  },\r\n\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n  buttons: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }\r\n\r\n}));\r\n\r\nconst Header = props => {\r\n  const classes = useStyles();\r\n  const [dialogOpen, setDialogOpen] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const dialogClose = () => {\r\n    setDialogOpen(false)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChangePassword = () => {\r\n    setDialogOpen(true)\r\n  };\r\n\r\n  const handleProfile = () => {\r\n    props.history.push('/yourprofile')\r\n  }\r\n\r\n  const logOut = () => {\r\n    props.history.push('/')\r\n  }\r\n  \r\n  const date = () => {\r\n    const date = new Date()\r\n    const hours = date.getHours()\r\n    let timeOfDay\r\n\r\n    if (hours < 12) {\r\n      timeOfDay = \"Good Morning\"\r\n    } else if (hours >= 12 && hours < 17) {\r\n      timeOfDay = \"Good Afternoon\"\r\n    } else {\r\n      timeOfDay = \"Good Evening\"\r\n    }\r\n    return timeOfDay\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <ThemeProvider theme={theme}>\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <SvgIcon className={classes.SvgIcon}>\r\n              <LocalHospitalIcon />\r\n            </SvgIcon>\r\n\r\n            <Typography variant=\"h6\" className={classes.title} noWrap>\r\n              {date()}, Doctor\r\n          </Typography>\r\n\r\n\r\n            <div className={classes.buttons}>\r\n              <Button\r\n                component={Link}\r\n                variant=\"outlined\"\r\n                style={{ color: '#FFFFFF' }}\r\n                to=\"/dashboard\">\r\n                Homepage\r\n            </Button>\r\n\r\n              <Button\r\n                component={Link}\r\n                variant=\"outlined\"\r\n                style={{ color: '#FFFFFF' }}\r\n                to=\"/addpatient\">\r\n                Add Patient\r\n            </Button>\r\n            </div>\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleProfile}>My Profile</MenuItem>\r\n                <MenuItem onClick={handleChangePassword}>Change Password</MenuItem>\r\n                <Divider />\r\n                <MenuItem onClick={logOut}>Log Out</MenuItem>\r\n              </Menu>\r\n\r\n              <Dialog\r\n              fullWidth\r\n                maxWidth=\"sm\"\r\n                open={dialogOpen}\r\n                onClose={dialogClose}\r\n              >\r\n                <DialogTitle>Change Password</DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText>\r\n                    Enter your password below in order to change it:\r\n                </DialogContentText>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                  />\r\n                  <DialogActions>\r\n                    <Button onClick={dialogClose} color=\"primary\">\r\n                      Save Password\r\n            </Button>\r\n                    <Button onClick={dialogClose} color=\"primary\">\r\n                      Cancel\r\n            </Button>\r\n                  </DialogActions>\r\n                </DialogContent>\r\n              </Dialog>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div className={classes.appBarSpacer} />\r\n      </ThemeProvider>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default withRouter(Header);","import React from 'react';\r\nimport { withStyles, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, Link } from '@material-ui/core';\r\nimport { TableRow, Paper, Typography, ThemeProvider, Slide } from '@material-ui/core';\r\nimport Header from \"../../components/Header/Header\"\r\nimport theme from \"../../assets/theme/theme\"\r\nimport { Link as link } from \"react-router-dom\"\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: \"#e3f0d3\",\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nfunction createData(id, name, age) {\r\n    return { id, name, age };\r\n}\r\n\r\nconst rows = [\r\n    createData(1, \"Ahmad Bin Suleman\", 22),\r\n    createData(2, \"Aamna Ahmad\", 23),\r\n    createData(3, \"Mirza Jamshed\", 40),\r\n    createData(4, \"Wahaj Mustakeem\", 69),\r\n    createData(5, \"Inaam Shehzaad\", 42),\r\n    createData(6, \"Fatima Umar\", 34),\r\n    createData(7, \"Fatima Malik\", 66),\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        padding: theme.spacing(3)\r\n    },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    titletext: {\r\n        marginBottom: \"40px\"\r\n    }\r\n}));\r\n\r\nexport default function HomePage() {\r\n    const classes = useStyles();\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Header />\r\n            <Slide direction=\"down\" in={true} timeout={300}>\r\n                <div className={classes.content}>\r\n                    <Typography variant=\"h2\" align=\"center\" color=\"secondary\" className={classes.titletext}>Current Patients</Typography>\r\n                    <Slide direction=\"up\" in={true} timeout={300}>\r\n                        <TableContainer component={Paper}>\r\n                            <Table className={classes.table}>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <StyledTableCell align=\"center\">Patient's ID</StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">Name</StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">Age</StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">Action</StyledTableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {rows.map((row) => (\r\n                                        <StyledTableRow key={row.id}>\r\n                                            <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                                                {row.id}\r\n                                            </StyledTableCell>\r\n                                            <StyledTableCell align=\"center\">{row.name}</StyledTableCell>\r\n                                            <StyledTableCell align=\"center\">{row.age}</StyledTableCell>\r\n                                            <StyledTableCell align=\"center\">\r\n                                                <Link\r\n                                                    component={link}\r\n                                                    to=\"/viewpatientprofile\"\r\n                                                    variant=\"body2\"\r\n                                                >\r\n                                                    View Profile\r\n                                        </Link>\r\n                                            </StyledTableCell>\r\n                                        </StyledTableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Slide>\r\n                </div>\r\n            </Slide>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { withStyles, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead } from '@material-ui/core';\r\nimport { TableRow, Paper, Typography, Grid, ThemeProvider, Slide } from '@material-ui/core';\r\nimport Header from \"../../components/Header/Header\"\r\nimport theme from \"../../assets/theme/theme\"\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: \"#e3f0d3\",\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nfunction createData(time, hr, temp, sys, diast) {\r\n    return { time, hr, temp, sys, diast };\r\n}\r\n\r\nconst rows = [\r\n    createData(\"08-09-2020/10:00 PM\", 82, 90, 81, 122),\r\n    createData(\"08-09-2020/10:05 PM\", 80, 91, 83, 121),\r\n    createData(\"08-09-2020/10:10 PM\", 84, 89, 81, 120),\r\n    createData(\"08-09-2020/10:15 PM\", 83, 88, 82, 118),\r\n    createData(\"08-09-2020/10:20 PM\", 81, 93, 83, 119),\r\n    createData(\"08-09-2020/10:25 PM\", 80, 92, 80, 120),\r\n    createData(\"08-09-2020/10:30 PM\", 79, 90, 84, 122),\r\n    createData(\"08-09-2020/10:35 PM\", 86, 91, 83, 124),\r\n    createData(\"08-09-2020/10:40 PM\", 84, 93, 82, 121),\r\n    createData(\"08-09-2020/10:45 PM\", 86, 94, 79, 120),\r\n    createData(\"08-09-2020/10:50 PM\", 84, 92, 78, 124),\r\n    createData(\"08-09-2020/10:55 PM\", 82, 91, 81, 121),\r\n    createData(\"08-09-2020/11:00 PM\", 81, 90, 80, 120),\r\n\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        padding: theme.spacing(3)\r\n    },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    labels: {\r\n        padding: theme.spacing(3)\r\n    },\r\n}));\r\n\r\nexport default function ViewHistory() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Header />\r\n            <div className={classes.content}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <Slide direction=\"down\" in={true} timeout={300}>\r\n                            <Typography\r\n                                variant=\"h2\"\r\n                                color=\"secondary\">\r\n                                Patient's Profile\r\n                        </Typography>\r\n                        </Slide>\r\n                    </Grid>\r\n                </Grid>\r\n                <Slide direction=\"down\" in={true} timeout={300}>\r\n                    <Grid container className={classes.labels}>\r\n                        <Grid item>\r\n                            <Typography variant=\"h4\" className={classes.headerText} color=\"secondary\">\r\n                                Patient's Name:\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"h4\" >\r\n                                Wahaj Mustakeem\r\n                    </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Slide>\r\n\r\n                <Slide direction=\"down\" in={true} timeout={300}>\r\n                    <Grid container className={classes.labels}>\r\n                        <Grid item>\r\n                            <Typography variant=\"h4\" className={classes.headerText} color=\"secondary\">\r\n                                Patient's Age:\r\n                    </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item>\r\n                            <Typography variant=\"h4\">\r\n                                69\r\n                    </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Slide>\r\n                <Slide direction=\"left\" in={true} timeout={500}>\r\n                    <TableContainer component={Paper}>\r\n                        <Table className={classes.table}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <StyledTableCell align=\"center\">Timestamp</StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">Heart Rate(BPM)</StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">Body Temp (F)</StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">Systolic BP</StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">Diastolic BP</StyledTableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row) => (\r\n                                    <StyledTableRow key={row.time}>\r\n                                        <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                                            {row.time}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">{row.hr}</StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">{row.temp}</StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">{row.sys}</StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">{row.diast}</StyledTableCell>\r\n                                    </StyledTableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Slide>\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n","import React from \"react\"\r\nimport { Typography, makeStyles, Grid, Card, Button, Dialog, Slide } from \"@material-ui/core\"\r\nimport { DialogTitle, DialogContentText, DialogContent, DialogActions, ThemeProvider } from \"@material-ui/core\"\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport Header from \"../../components/Header/Header\"\r\nimport theme from \"../../assets/theme/theme\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        padding: theme.spacing(3),\r\n    },\r\n    labels: {\r\n        padding: theme.spacing(3)\r\n    },\r\n    sideButton: {\r\n        fontSize: \"large\",\r\n        marginRight: \"20px\",\r\n        width: \"361px\",\r\n        height: \"107px\",\r\n        background: \"#FFFFFF\",\r\n        boxShadow: \"0px 0px 7px rgba(0, 0, 0, 0.28)\",\r\n        borderRadius: \"12px\",\r\n    },\r\n    tileTopText: {\r\n        marginTop: \"5px\",\r\n        marginLeft: \"10px\",\r\n        fontSize: \"25px\",\r\n        fontWeight: \"normal\",\r\n        lineHeight: \"35px\",\r\n        color: \"#959595\"\r\n    },\r\n    tileBottomText: {\r\n        textAlign:\"right\",\r\n        marginTop:\"60px\",\r\n        marginRight: \"10px\",\r\n        fontSize: \"30px\",\r\n        fontWeight: \"normal\",\r\n        lineHeight: \"30px\",\r\n        color: \"rgba(0, 0, 0, 0.57)\"\r\n    },\r\n    rightBar: {\r\n        marginTop: \"20px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-evenly\",\r\n        alignItems: \"flex-end\"\r\n    },\r\n    cardBody: {\r\n        display: 'grid',\r\n        gridTemplateRows: '1fr 1fr',\r\n        gridTemplateColumns: '1fr 1fr',\r\n        flexWrap: 'wrap',\r\n        width: '530px',\r\n        height: '400px',\r\n        background: '#b7deb8',\r\n        border: '2px solid #6fbf73',\r\n        boxShadow: ' 0px 0px 7px rgba(0, 0, 0, 0.28)',\r\n        borderRadius: '12px',\r\n    },\r\n    minicard: {\r\n        position: \"relative\",\r\n        margin: '11%',\r\n        background: '#CEFDD0',\r\n        borderRadius: '6px'\r\n    }\r\n}));\r\n\r\nconst ViewPatientProfile = () => {\r\n\r\n    const classes = useStyles();\r\n    const [openGenerateReport, setOpenGenerateReport] = React.useState(false);\r\n    const [openDischarge, setOpenDischarge] = React.useState(false);\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Header />\r\n            <div className={classes.content}>\r\n                <Grid container lg={8}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item>\r\n                            <Slide direction=\"down\" in={true} timeout={300}>\r\n                                <Typography\r\n                                    variant=\"h2\"\r\n                                    color=\"secondary\">\r\n                                    Patient's Profile\r\n                                </Typography>\r\n                            </Slide>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Slide direction=\"down\" in={true} timeout={300}>\r\n                        <Grid container className={classes.labels}>\r\n                            <Grid item>\r\n                                <Typography variant=\"h4\" className={classes.headerText} color=\"secondary\">\r\n                                    Patient's Name:\r\n                                 </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography variant=\"h4\" >\r\n                                    Wahaj Mustakeem\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Slide>\r\n                    <Slide direction=\"down\" in={true} timeout={300}>\r\n                        <Grid container className={classes.labels}>\r\n                            <Grid item>\r\n                                <Typography variant=\"h4\" className={classes.headerText} color=\"secondary\">\r\n                                    Patient's Age:\r\n                    </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography variant=\"h4\">\r\n                                    69\r\n                    </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Slide>\r\n\r\n                    <Slide direction=\"right\" in={true} timeout={300}>\r\n                        <Grid item>\r\n                            <Typography variant=\"h2\" color=\"secondary\" className={[classes.headerText, classes.labels].join(' ')}>Vitals</Typography>\r\n                        </Grid>\r\n                    </Slide>\r\n                    <Slide direction=\"right\" in={true} timeout={300}>\r\n                        <Grid container>\r\n                            <Card className={classes.cardBody}>\r\n                                <Card className={classes.minicard}>\r\n                                    <Typography variant=\"h6\" style={{ color: '#0A7A0F' }} className={classes.tileTopText}>Temperature</Typography>\r\n                                    <Typography variant=\"h6\" className={classes.tileBottomText}>100 F</Typography>\r\n                                </Card>\r\n                                <Card className={classes.minicard}>\r\n                                    <Typography variant=\"h6\" style={{ color: '#0A7A0F' }} className={classes.tileTopText}>BPM</Typography>\r\n                                    <Typography variant=\"h6\" className={classes.tileBottomText}>85</Typography>\r\n                                </Card>\r\n\r\n                                <Card className={classes.minicard}>\r\n                                    <Typography variant=\"h6\" style={{ color: '#0A7A0F' }} className={classes.tileTopText}>BP (mm/Hg)</Typography>\r\n                                    <Typography variant=\"h6\" className={classes.tileBottomText}>120/80</Typography>\r\n                                </Card>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Slide>\r\n                </Grid>\r\n                <Slide direction=\"left\" in={true} timeout={500}>\r\n                    <Grid container className={classes.rightBar}>\r\n                        <Grid item>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                startIcon={<AssessmentIcon />}\r\n                                className={classes.sideButton}\r\n                                color=\"primary\"\r\n                                onClick={() => { setOpenGenerateReport(true) }}>\r\n                                Generate Report</Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                startIcon={<AssignmentTurnedInIcon />}\r\n                                className={classes.sideButton}\r\n                                color=\"primary\"\r\n                                onClick={() => { setOpenDischarge(true) }}>\r\n                                Discharge</Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button\r\n                                component={Link}\r\n                                to=\"/viewhistory\"\r\n                                variant=\"outlined\"\r\n                                startIcon={<HistoryIcon />}\r\n                                color=\"primary\"\r\n                                className={classes.sideButton}\r\n                            >\r\n                                View History\r\n                        </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button\r\n                                component={Link}\r\n                                to=\"/livereadings\"\r\n                                variant=\"outlined\"\r\n                                startIcon={<TimelineIcon />}\r\n                                style={{ backgroundColor: '#00a152', color: '#FFFFFF' }}\r\n                                className={classes.sideButton}>\r\n                                Live Statistics\r\n                    </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Slide>\r\n\r\n                <Dialog\r\n                    fullWidth\r\n                    maxWidth=\"sm\"\r\n                    open={openGenerateReport}\r\n                    onClose={() => { setOpenGenerateReport(false) }}\r\n                >\r\n                    <DialogTitle>Generate Report</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Temperature: 100F\r\n                            {<br />}\r\n                            BPM: 85\r\n                            {<br />}\r\n                            Blood Pressure: 120/80\r\n                        </DialogContentText>\r\n\r\n                        <DialogActions>\r\n                            <Button onClick={() => { setOpenGenerateReport(false) }} color=\"primary\">\r\n                                Download Report\r\n                            </Button>\r\n                            <Button onClick={() => { setOpenGenerateReport(false) }} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </DialogContent>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    fullWidth\r\n                    maxWidth=\"sm\"\r\n                    open={openDischarge}\r\n                    onClose={() => { setOpenDischarge(false) }}\r\n                >\r\n                    <DialogTitle>Discharge Patient</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Are you sure you want to discharge this patient{\"?\"}\r\n                        </DialogContentText>\r\n\r\n                        <DialogActions>\r\n                            <Button onClick={() => { setOpenDischarge(false) }} color=\"primary\">\r\n                                Confirm\r\n                            </Button>\r\n                            <Button onClick={() => { setOpenDischarge(false) }} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </div>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ViewPatientProfile","/*!\r\n\r\n =========================================================\r\n * Material Dashboard React - v1.9.0 based on Material Dashboard - v1.2.0\r\n =========================================================\r\n\r\n * Product Page: http://www.creative-tim.com/product/material-dashboard-react\r\n * Copyright 2020 Creative Tim (http://www.creative-tim.com)\r\n * Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\r\n\r\n =========================================================\r\n\r\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n */\r\n\r\n// ##############################\r\n// // // Function that converts from hex color to rgb color\r\n// // // Example: input = #9c27b0 => output = 156, 39, 176\r\n// // // Example: input = 9c27b0 => output = 156, 39, 176\r\n// // // Example: input = #999 => output = 153, 153, 153\r\n// // // Example: input = 999 => output = 153, 153, 153\r\n// #############################\r\nconst hexToRgb = input => {\r\n  input = input + \"\";\r\n  input = input.replace(\"#\", \"\");\r\n  let hexRegex = /[0-9A-Fa-f]/g;\r\n  if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\r\n    throw new Error(\"input is not a valid hex color.\");\r\n  }\r\n  if (input.length === 3) {\r\n    let first = input[0];\r\n    let second = input[1];\r\n    let last = input[2];\r\n    input = first + first + second + second + last + last;\r\n  }\r\n  input = input.toUpperCase();\r\n  let first = input[0] + input[1];\r\n  let second = input[2] + input[3];\r\n  let last = input[4] + input[5];\r\n  return (\r\n    parseInt(first, 16) +\r\n    \", \" +\r\n    parseInt(second, 16) +\r\n    \", \" +\r\n    parseInt(last, 16)\r\n  );\r\n};\r\n\r\n// ##############################\r\n// // // Variables - Styles that are used on more than one component\r\n// #############################\r\n\r\nconst drawerWidth = 260;\r\n\r\nconst transition = {\r\n  transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\"\r\n};\r\n\r\nconst container = {\r\n  paddingRight: \"15px\",\r\n  paddingLeft: \"15px\",\r\n  marginRight: \"auto\",\r\n  marginLeft: \"auto\"\r\n};\r\n\r\nconst defaultFont = {\r\n  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n  fontWeight: \"300\",\r\n  lineHeight: \"1.5em\"\r\n};\r\n\r\nconst primaryColor = [\"#9c27b0\", \"#ab47bc\", \"#8e24aa\", \"#af2cc5\"];\r\nconst warningColor = [\"#ff9800\", \"#ffa726\", \"#fb8c00\", \"#ffa21a\"];\r\nconst dangerColor = [\"#f44336\", \"#ef5350\", \"#e53935\", \"#f55a4e\"];\r\nconst successColor = [\"#4caf50\", \"#66bb6a\", \"#43a047\", \"#5cb860\"];\r\nconst infoColor = [\"#00acc1\", \"#26c6da\", \"#00acc1\", \"#00d3ee\"];\r\nconst roseColor = [\"#e91e63\", \"#ec407a\", \"#d81b60\", \"#eb3573\"];\r\nconst grayColor = [\r\n  \"#999\",\r\n  \"#777\",\r\n  \"#3C4858\",\r\n  \"#AAAAAA\",\r\n  \"#D2D2D2\",\r\n  \"#DDD\",\r\n  \"#b4b4b4\",\r\n  \"#555555\",\r\n  \"#333\",\r\n  \"#a9afbb\",\r\n  \"#eee\",\r\n  \"#e7e7e7\"\r\n];\r\nconst blackColor = \"#000\";\r\nconst whiteColor = \"#FFF\";\r\n\r\nconst boxShadow = {\r\n  boxShadow:\r\n    \"0 10px 30px -12px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.42), 0 4px 25px 0px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.12), 0 8px 10px -5px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.2)\"\r\n};\r\n\r\nconst primaryBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(primaryColor[0]) +\r\n    \",.4)\"\r\n};\r\nconst infoBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(infoColor[0]) +\r\n    \",.4)\"\r\n};\r\nconst successBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(successColor[0]) +\r\n    \",.4)\"\r\n};\r\nconst warningBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(warningColor[0]) +\r\n    \",.4)\"\r\n};\r\nconst dangerBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(dangerColor[0]) +\r\n    \",.4)\"\r\n};\r\nconst roseBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(roseColor[0]) +\r\n    \",.4)\"\r\n};\r\n\r\nconst warningCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + warningColor[1] + \", \" + warningColor[2] + \")\",\r\n  ...warningBoxShadow\r\n};\r\nconst successCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + successColor[1] + \", \" + successColor[2] + \")\",\r\n  ...successBoxShadow\r\n};\r\nconst dangerCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + dangerColor[1] + \", \" + dangerColor[2] + \")\",\r\n  ...dangerBoxShadow\r\n};\r\nconst infoCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + infoColor[1] + \", \" + infoColor[2] + \")\",\r\n  ...infoBoxShadow\r\n};\r\nconst primaryCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + primaryColor[1] + \", \" + primaryColor[2] + \")\",\r\n  ...primaryBoxShadow\r\n};\r\nconst roseCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + roseColor[1] + \", \" + roseColor[2] + \")\",\r\n  ...roseBoxShadow\r\n};\r\n\r\nconst cardActions = {\r\n  margin: \"0 20px 10px\",\r\n  paddingTop: \"10px\",\r\n  borderTop: \"1px solid \" + grayColor[10],\r\n  height: \"auto\",\r\n  ...defaultFont\r\n};\r\n\r\nconst cardHeader = {\r\n  margin: \"-20px 15px 0\",\r\n  borderRadius: \"3px\",\r\n  padding: \"15px\"\r\n};\r\n\r\nconst card = {\r\n  display: \"inline-block\",\r\n  position: \"relative\",\r\n  width: \"100%\",\r\n  margin: \"25px 0\",\r\n  boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\r\n  borderRadius: \"3px\",\r\n  color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\r\n  background: whiteColor\r\n};\r\n\r\nconst defaultBoxShadow = {\r\n  border: \"0\",\r\n  borderRadius: \"3px\",\r\n  boxShadow:\r\n    \"0 10px 20px -12px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.42), 0 3px 20px 0px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.12), 0 8px 10px -5px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.2)\",\r\n  padding: \"10px 0\",\r\n  transition: \"all 150ms ease 0s\"\r\n};\r\n\r\nconst title = {\r\n  color: grayColor[2],\r\n  textDecoration: \"none\",\r\n  fontWeight: \"300\",\r\n  marginTop: \"30px\",\r\n  marginBottom: \"25px\",\r\n  minHeight: \"32px\",\r\n  fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n  \"& small\": {\r\n    color: grayColor[1],\r\n    fontWeight: \"400\",\r\n    lineHeight: \"1\"\r\n  }\r\n};\r\n\r\nconst cardTitle = {\r\n  ...title,\r\n  marginTop: \"0\",\r\n  marginBottom: \"3px\",\r\n  minHeight: \"auto\",\r\n  \"& a\": {\r\n    ...title,\r\n    marginTop: \".625rem\",\r\n    marginBottom: \"0.75rem\",\r\n    minHeight: \"auto\"\r\n  }\r\n};\r\n\r\nconst cardSubtitle = {\r\n  marginTop: \"-.375rem\"\r\n};\r\n\r\nconst cardLink = {\r\n  \"& + $cardLink\": {\r\n    marginLeft: \"1.25rem\"\r\n  }\r\n};\r\n\r\nexport {\r\n  hexToRgb,\r\n  //variables\r\n  drawerWidth,\r\n  transition,\r\n  container,\r\n  boxShadow,\r\n  card,\r\n  defaultFont,\r\n  primaryColor,\r\n  warningColor,\r\n  dangerColor,\r\n  successColor,\r\n  infoColor,\r\n  roseColor,\r\n  grayColor,\r\n  blackColor,\r\n  whiteColor,\r\n  primaryBoxShadow,\r\n  infoBoxShadow,\r\n  successBoxShadow,\r\n  warningBoxShadow,\r\n  dangerBoxShadow,\r\n  roseBoxShadow,\r\n  warningCardHeader,\r\n  successCardHeader,\r\n  dangerCardHeader,\r\n  infoCardHeader,\r\n  primaryCardHeader,\r\n  roseCardHeader,\r\n  cardActions,\r\n  cardHeader,\r\n  defaultBoxShadow,\r\n  title,\r\n  cardTitle,\r\n  cardSubtitle,\r\n  cardLink\r\n};\r\n","import {\r\n  blackColor,\r\n  whiteColor,\r\n  hexToRgb\r\n} from \"../../../jss/material-dashboard-react.js\";\r\n\r\nconst cardStyle = {\r\n  card: {\r\n    border: \"0\",\r\n    marginBottom: \"30px\",\r\n    marginTop: \"30px\",\r\n    borderRadius: \"6px\",\r\n    color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\r\n    background: whiteColor,\r\n    width: \"100%\",\r\n    boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minWidth: \"0\",\r\n    wordWrap: \"break-word\",\r\n    fontSize: \".875rem\"\r\n  },\r\n  cardPlain: {\r\n    background: \"transparent\",\r\n    boxShadow: \"none\"\r\n  },\r\n  cardProfile: {\r\n    marginTop: \"30px\",\r\n    textAlign: \"center\"\r\n  },\r\n  cardChart: {\r\n    \"& p\": {\r\n      marginTop: \"0px\",\r\n      paddingTop: \"0px\"\r\n    }\r\n  }\r\n};\r\n\r\nexport default cardStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\n\r\n// core components\r\n\r\n// import styles from \"assets/jss/material-dashboard-react/components/cardStyle.js\";\r\n\r\nimport styles from \"../../assets/jss/material-dashboard-react/components/cardStyle.js\"\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Card(props) {\r\n  const classes = useStyles();\r\n  const { className, children, plain, profile, chart, ...rest } = props;\r\n  const cardClasses = classNames({\r\n    [classes.card]: true,\r\n    [classes.cardPlain]: plain,\r\n    [classes.cardProfile]: profile,\r\n    [classes.cardChart]: chart,\r\n    [className]: className !== undefined\r\n  });\r\n  return (\r\n    <div className={cardClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  className: PropTypes.string,\r\n  plain: PropTypes.bool,\r\n  profile: PropTypes.bool,\r\n  chart: PropTypes.bool,\r\n  children: PropTypes.node\r\n};\r\n","import { hexToRgb, blackColor } from \"../../../jss/material-dashboard-react.js\";\r\n\r\nconst cardAvatarStyle = {\r\n  cardAvatar: {\r\n    \"&$cardAvatarProfile img\": {\r\n      width: \"100%\",\r\n      height: \"auto\"\r\n    }\r\n  },\r\n  cardAvatarProfile: {\r\n    maxWidth: \"130px\",\r\n    maxHeight: \"130px\",\r\n    margin: \"-50px auto 0\",\r\n    borderRadius: \"50%\",\r\n    overflow: \"hidden\",\r\n    padding: \"0\",\r\n    boxShadow:\r\n      \"0 16px 38px -12px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.56), 0 4px 25px 0px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.12), 0 8px 10px -5px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.2)\",\r\n    \"&$cardAvatarPlain\": {\r\n      marginTop: \"0\"\r\n    }\r\n  },\r\n  cardAvatarPlain: {}\r\n};\r\n\r\nexport default cardAvatarStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\n// core components\r\n\r\nimport styles from \"../../assets/jss/material-dashboard-react/components/cardAvatarStyle\"\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CardAvatar(props) {\r\n  const classes = useStyles();\r\n  const { children, className, plain, profile, ...rest } = props;\r\n  const cardAvatarClasses = classNames({\r\n    [classes.cardAvatar]: true,\r\n    [classes.cardAvatarProfile]: profile,\r\n    [classes.cardAvatarPlain]: plain,\r\n    [className]: className !== undefined\r\n  });\r\n  return (\r\n    <div className={cardAvatarClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCardAvatar.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  className: PropTypes.string,\r\n  profile: PropTypes.bool,\r\n  plain: PropTypes.bool\r\n};\r\n","import {\r\n  warningCardHeader,\r\n  successCardHeader,\r\n  dangerCardHeader,\r\n  infoCardHeader,\r\n  primaryCardHeader,\r\n  roseCardHeader,\r\n  whiteColor\r\n} from \"../../../jss/material-dashboard-react.js\";\r\n\r\nconst cardHeaderStyle = {\r\n  cardHeader: {\r\n    padding: \"0.75rem 1.25rem\",\r\n    marginBottom: \"0\",\r\n    borderBottom: \"none\",\r\n    background: \"transparent\",\r\n    zIndex: \"3 !important\",\r\n    \"&$cardHeaderPlain,&$cardHeaderIcon,&$cardHeaderStats,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\r\n      margin: \"0 15px\",\r\n      padding: \"0\",\r\n      position: \"relative\",\r\n      color: whiteColor\r\n    },\r\n    \"&:first-child\": {\r\n      borderRadius: \"calc(.25rem - 1px) calc(.25rem - 1px) 0 0\"\r\n    },\r\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\r\n      \"&:not($cardHeaderIcon)\": {\r\n        borderRadius: \"3px\",\r\n        marginTop: \"-20px\",\r\n        padding: \"15px\"\r\n      }\r\n    },\r\n    \"&$cardHeaderStats svg\": {\r\n      fontSize: \"36px\",\r\n      lineHeight: \"56px\",\r\n      textAlign: \"center\",\r\n      width: \"36px\",\r\n      height: \"36px\",\r\n      margin: \"10px 10px 4px\"\r\n    },\r\n    \"&$cardHeaderStats i,&$cardHeaderStats .material-icons\": {\r\n      fontSize: \"36px\",\r\n      lineHeight: \"56px\",\r\n      width: \"56px\",\r\n      height: \"56px\",\r\n      textAlign: \"center\",\r\n      overflow: \"unset\",\r\n      marginBottom: \"1px\"\r\n    },\r\n    \"&$cardHeaderStats$cardHeaderIcon\": {\r\n      textAlign: \"right\"\r\n    }\r\n  },\r\n  cardHeaderPlain: {\r\n    marginLeft: \"0px !important\",\r\n    marginRight: \"0px !important\"\r\n  },\r\n  cardHeaderStats: {\r\n    \"& $cardHeaderIcon\": {\r\n      textAlign: \"right\"\r\n    },\r\n    \"& h1,& h2,& h3,& h4,& h5,& h6\": {\r\n      margin: \"0 !important\"\r\n    }\r\n  },\r\n  cardHeaderIcon: {\r\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\r\n      background: \"transparent\",\r\n      boxShadow: \"none\"\r\n    },\r\n    \"& i,& .material-icons\": {\r\n      width: \"33px\",\r\n      height: \"33px\",\r\n      textAlign: \"center\",\r\n      lineHeight: \"33px\"\r\n    },\r\n    \"& svg\": {\r\n      width: \"24px\",\r\n      height: \"24px\",\r\n      textAlign: \"center\",\r\n      lineHeight: \"33px\",\r\n      margin: \"5px 4px 0px\"\r\n    }\r\n  },\r\n  warningCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...warningCardHeader\r\n    }\r\n  },\r\n  successCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...successCardHeader\r\n    }\r\n  },\r\n  dangerCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...dangerCardHeader\r\n    }\r\n  },\r\n  infoCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...infoCardHeader\r\n    }\r\n  },\r\n  primaryCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...primaryCardHeader\r\n    }\r\n  },\r\n  roseCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...roseCardHeader\r\n    }\r\n  }\r\n};\r\n\r\nexport default cardHeaderStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\n\r\n// core components\r\nimport styles from \"../../assets/jss/material-dashboard-react/components/cardHeaderStyle\"\r\n\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CardHeader(props) {\r\n  const classes = useStyles();\r\n  const { className, children, color, plain, stats, icon, ...rest } = props;\r\n  const cardHeaderClasses = classNames({\r\n    [classes.cardHeader]: true,\r\n    [classes[color + \"CardHeader\"]]: color,\r\n    [classes.cardHeaderPlain]: plain,\r\n    [classes.cardHeaderStats]: stats,\r\n    [classes.cardHeaderIcon]: icon,\r\n    [className]: className !== undefined\r\n  });\r\n  return (\r\n    <div className={cardHeaderClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCardHeader.propTypes = {\r\n  className: PropTypes.string,\r\n  color: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"success\",\r\n    \"danger\",\r\n    \"info\",\r\n    \"primary\",\r\n    \"rose\"\r\n  ]),\r\n  plain: PropTypes.bool,\r\n  stats: PropTypes.bool,\r\n  icon: PropTypes.bool,\r\n  children: PropTypes.node\r\n};\r\n","const cardBodyStyle = {\r\n  cardBody: {\r\n    padding: \"0.9375rem 20px\",\r\n    flex: \"1 1 auto\",\r\n    WebkitBoxFlex: \"1\",\r\n    position: \"relative\"\r\n  },\r\n  cardBodyPlain: {\r\n    paddingLeft: \"5px\",\r\n    paddingRight: \"5px\"\r\n  },\r\n  cardBodyProfile: {\r\n    marginTop: \"15px\"\r\n  }\r\n};\r\n\r\nexport default cardBodyStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\n\r\n// core components\r\nimport styles from \"../../assets/jss/material-dashboard-react/components/cardBodyStyle\"\r\n\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CardBody(props) {\r\n  const classes = useStyles();\r\n  const { className, children, plain, profile, ...rest } = props;\r\n  const cardBodyClasses = classNames({\r\n    [classes.cardBody]: true,\r\n    [classes.cardBodyPlain]: plain,\r\n    [classes.cardBodyProfile]: profile,\r\n    [className]: className !== undefined\r\n  });\r\n  return (\r\n    <div className={cardBodyClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCardBody.propTypes = {\r\n  className: PropTypes.string,\r\n  plain: PropTypes.bool,\r\n  profile: PropTypes.bool,\r\n  children: PropTypes.node\r\n};\r\n","import React from 'react'\r\nimport { Typography, makeStyles, ThemeProvider, Slide } from \"@material-ui/core\"\r\nimport Card from '../../components/Card/Card'\r\nimport CardAvatar from '../../components/Card/CardAvatar'\r\nimport CardHeader from '../../components/Card/CardHeader'\r\nimport CardBody from '../../components/Card/CardBody'\r\nimport Divider from \"@material-ui/core/Divider/Divider\"\r\nimport PhoneIcon from '@material-ui/icons/Phone'\r\nimport Header from \"../../components/Header/Header\"\r\nimport BusinessIcon from '@material-ui/icons/Business'\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport theme from \"../../assets/theme/theme\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    headerText: {\r\n        marginBottom: \"75px\"\r\n    },\r\n    card: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    content: {\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst YourProfile = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Header />\r\n            <div className={classes.content}>\r\n                <Slide direction=\"down\" in={true} timeout={300}>\r\n                    <Typography variant=\"h2\" align=\"center\" color=\"secondary\" className={classes.headerText}>Your Profile</Typography>\r\n                </Slide>\r\n                <Slide direction=\"left\" in={true} timeout={300}>\r\n                    <main>\r\n                        <Card profile>\r\n                            <CardAvatar profile>\r\n                                <img\r\n                                    src=\"https://www.publicdomainpictures.net/pictures/210000/velka/doctor-1490804718D0I.jpg\"\r\n                                    alt=\"Avatar\" />\r\n                            </CardAvatar>\r\n                            <CardHeader profile>\r\n                                <Typography\r\n                                    variant=\"h4\"\r\n                                >\r\n                                    Dr. Gia Adams\r\n                        </Typography>\r\n                            </CardHeader>\r\n                            <Divider />\r\n                            <CardBody profile>\r\n                                <Typography>\r\n                                    Dermatologist, Laser Specialist\r\n                            </Typography>\r\n                                <div className={classes.card}>\r\n                                    <PhoneIcon fontSize=\"large\" />\r\n                                    <Typography variant=\"h6\">0334-121212</Typography>\r\n                                    <BusinessIcon fontSize=\"large\" />\r\n                                    <Typography variant=\"h6\">Room no. 7, Bahria Hospital, Rawalpindi</Typography>\r\n                                    <EmailIcon fontSize=\"large\" />\r\n                                    <Typography variant=\"h6\">gia@gmail.com</Typography>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </main>\r\n                </Slide>\r\n            </div>\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default YourProfile","import React from \"react\"\r\nimport { Typography, makeStyles, Grid, ThemeProvider, Slide } from \"@material-ui/core\"\r\nimport ChartistGraph from \"react-chartist\"\r\nimport Card from \"../../components/Card/Card\"\r\nimport CardBody from \"../../components/Card/CardBody\"\r\nimport CardHeader from \"../../components/Card/CardHeader\"\r\nimport Header from \"../../components/Header/Header\"\r\nimport theme from \"../../assets/theme/theme\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    content: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    headerText: {\r\n        color: '#9e9e9e'\r\n    },\r\n    labels: {\r\n        padding: theme.spacing(3)\r\n    },\r\n}));\r\n\r\nconst LiveReadings = () => {\r\n\r\n    var biPolarBarChartData = {\r\n        labels: ['W1', 'W2', 'W3', 'W4', 'W5', 'W6', 'W7', 'W8', 'W9', 'W10'],\r\n        series: [\r\n            [1, 2, 4, 8, 6, -2, -1, -4, -6, -2]\r\n        ]\r\n    };\r\n    var biPolarBarChartOptions = {\r\n        high: 10,\r\n        low: -10,\r\n        axisX: {\r\n            labelInterpolationFnc: function (value, index) {\r\n                return index % 2 === 0 ? value : null;\r\n            }\r\n        }\r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Header />\r\n            <div className={classes.content}>\r\n                <Slide direction=\"down\" in={true} timeout={300}>\r\n                    <Typography variant=\"h2\" color=\"secondary\" align=\"center\">Live Readings</Typography>\r\n                </Slide>\r\n\r\n                <Slide direction=\"down\" in={true} timeout={300}>\r\n                    <Grid container xs={12}>\r\n                        <Grid container className={classes.labels}>\r\n                            <Grid item>\r\n                                <Typography variant=\"h4\" className={classes.headerText}>\r\n                                    Patient's Name:\r\n                    </Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                                <Typography variant=\"h4\">\r\n                                    Wahaj Mustakeem\r\n                    </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container className={classes.labels}>\r\n                            <Grid item>\r\n                                <Typography variant=\"h4\" className={classes.headerText}>\r\n                                    Patient's Age:\r\n                    </Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                                <Typography variant=\"h4\">\r\n                                    69\r\n                    </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Slide>\r\n                \r\n                \r\n                <Card>\r\n                    <CardHeader><p>ECG</p></CardHeader>\r\n                    <CardBody>\r\n                        <ChartistGraph\r\n                            data={biPolarBarChartData}\r\n                            options={biPolarBarChartOptions}\r\n                            type={'Line'}\r\n                        />\r\n                    </CardBody>\r\n                </Card>\r\n\r\n                <Card>\r\n                    <CardHeader><p>BPM</p></CardHeader>\r\n                    <CardBody>\r\n                        <ChartistGraph data={biPolarBarChartData} options={biPolarBarChartOptions} type={'Line'} />\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default LiveReadings","import React from 'react';\r\nimport { Button, TextField, Dialog, DialogContent, DialogContentText, DialogTitle, DialogActions, Slide } from '@material-ui/core';\r\nimport { Grid, Typography, makeStyles, Container, Select, MenuItem, InputLabel, FormControl, ThemeProvider } from '@material-ui/core';\r\nimport Header from '../../components/Header/Header';\r\nimport theme from \"../../assets/theme/theme\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    toolBar: {\r\n        minHeight: \"180px\",\r\n    },\r\n    appBar: {\r\n        alignItems: \"center\",\r\n        background: '#00a152'\r\n    },\r\n    marginTopAppBar: {\r\n        marginTop: theme.spacing(35)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(6, 0, 2),\r\n        height: \"70px\"\r\n    },\r\n}));\r\n\r\nexport default function AddPatient() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [age, setAge] = React.useState('');\r\n\r\n    const handleSubmit = () => {\r\n        setOpen(true)\r\n        console.log(\"Done\")\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Header />\r\n            <div className={classes.content}>\r\n                <Slide direction=\"down\" in={true} timeout={300}>\r\n                    <Typography variant=\"h2\" align=\"center\" color=\"secondary\">Add Patient</Typography>\r\n                </Slide>\r\n\r\n                <Slide direction=\"down\" in={true} timeout={300}>\r\n                    <Container component=\"main\" maxWidth=\"sm\">\r\n                        <div className={classes.paper}>\r\n                            <form className={classes.form} noValidate>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                            autoComplete=\"fname\"\r\n                                            name=\"firstName\"\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            id=\"firstName\"\r\n                                            label=\"First Name\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            id=\"lastName\"\r\n                                            label=\"Last Name\"\r\n                                            name=\"lastName\"\r\n                                            autoComplete=\"lname\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            type=\"number\"\r\n                                            id=\"age\"\r\n                                            label=\"Age in year(s)\"\r\n                                            name=\"age\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <FormControl variant=\"outlined\" fullWidth>\r\n                                            <InputLabel id=\"demo-simple-select-outlined-label\">Gender</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"demo-simple-select-outlined-label\"\r\n                                                id=\"demo-simple-select-outlined\"\r\n                                                onChange={(event) => { setAge(event.target.value) }}\r\n                                                value={age}\r\n                                                label=\"Gender\"\r\n                                            >\r\n                                                <MenuItem value={'male'}>Male</MenuItem>\r\n                                                <MenuItem value={'female'}>Female</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            id=\"address\"\r\n                                            label=\"Address\"\r\n                                            name=\"address\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            type=\"number\"\r\n                                            id=\"contact\"\r\n                                            label=\"Contact Number\"\r\n                                            name=\"contact\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                            id=\"date\"\r\n                                            label=\"Admission Date\"\r\n                                            type=\"date\"\r\n                                            defaultValue=\"2017-05-24\"\r\n                                            fullWidth\r\n                                            className={classes.textField}\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Button\r\n                                    onClick={handleSubmit}\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    style={{ fontSize: 20 }}\r\n                                    color=\"primary\"\r\n                                    className={classes.submit}\r\n                                >\r\n                                    Add Patient\r\n                        </Button>\r\n                                <Dialog\r\n                                    \r\n                                    maxWidth=\"md\"\r\n                                    open={open}\r\n                                    onClose={handleClose}\r\n                                >\r\n                                    <DialogTitle>Patient Added Successfully</DialogTitle>\r\n                                    <DialogContent>\r\n                                        <DialogContentText>\r\n                                            Kindly keep the Address ID safe. Your Patient's Address is: 29021093123 and the QR is:\r\n                                </DialogContentText>\r\n                                        <img\r\n                                            src=\"https://s3.eu-central-1.amazonaws.com/centaur-wp/econsultancy/prod/content/uploads/archive/images/resized/0002/4236/qr_code-blog-third.png\"\r\n                                            alt=\"QR Code\" />\r\n                                        <DialogActions>\r\n                                            <Button onClick={handleClose} color=\"primary\">\r\n                                                Save QR\r\n                                    </Button>\r\n                                            <Button onClick={handleClose} color=\"primary\">\r\n                                                Close\r\n                                    </Button>\r\n                                        </DialogActions>\r\n                                    </DialogContent>\r\n                                </Dialog>\r\n                            </form>\r\n                        </div>\r\n                    </Container>\r\n                </Slide>\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\r\nimport Login from \"./views/Login/Login\"\r\nimport CreateAccount from \"./views/CreateAccount/CreateAccount\"\r\nimport ForgotPassword from './views/ForgotPassword/ForgotPassword';\r\nimport loggedInStatus from './views/Login/Login'\r\nimport HomePage from './views/HomePage/HomePage';\r\nimport ViewHistory from './views/ViewHistory/ViewHistory'\r\nimport ViewPatientProfile from './views/ViewPatientProfile/ViewPatientProfile.js'\r\nimport YourProfile from './views/YourProfile/YourProfile'\r\nimport LiveReadings from './views/LiveReadings/LiveReadings';\r\nimport AddPatient from './views/AddPatient/AddPatient'\r\n\r\n// const authentication = {\r\n//   isLoggedIn: false,\r\n//   onAuthentication() {\r\n//     this.isLoggedIn = true\r\n//   },\r\n//   getLoggedInStatus() {\r\n//     return this.isLoggedIn\r\n//   }\r\n// }\r\n\r\nfunction SecuredRoute(props) {\r\n  return (\r\n    <Route\r\n      path={props.path}\r\n      render={data => loggedInStatus ?\r\n        (<props.component {...data} />) :\r\n        (<Redirect to={{ pathname: '/' }} />)\r\n      } />\r\n  )\r\n}\r\nReactDOM.render(\r\n  <Router>\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Login} />\r\n      <Route path=\"/forgotpassword\" component={ForgotPassword} />\r\n      <Route path=\"/createaccount\" component={CreateAccount} />\r\n      <SecuredRoute path=\"/dashboard\" component={HomePage}/>\r\n      <Route path=\"/viewpatientprofile\" component={ViewPatientProfile}/>\r\n      <Route path=\"/yourprofile\" component={YourProfile}/>\r\n      <Route path=\"/livereadings\" component={LiveReadings}/>\r\n      <Route path=\"/addpatient\" component={AddPatient}/>\r\n      <Route path=\"/viewhistory\" component={ViewHistory}/>\r\n\r\n      <Route path=\"*\" component={() => \"404 NOT FOUND\"} />\r\n    </Switch>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}